version: '3.9'

services:
  api:
    build: ./backend/api
    expose:
      - "${PORT}"
    ports:
      - "${PORT}:${FASTAPI_PORT}"
    restart: unless-stopped
    env_file:
      - ./backend/.env
    depends_on:
      - db
    volumes:
      - ./backend/common:/app/common

  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  pg_consumer:
    build: ./backend/pg_consumer
    ports:
      - "8090:8090"
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./backend/common:/consumer/common
    env_file:
      - ./backend/.env

  db:
    image: postgres:13.2
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 1s
      retries: 20
    env_file:
      - ./backend/.env

  alembic:
    build: ./backend/api
    entrypoint: [ "alembic" ]
    command: [ "upgrade", "head" ]
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/common:/app/common

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "${CLICKHOUSE_HTTP_PORT}:8123"
      - "${CLICKHOUSE_TCP_PORT}:9000"
    env_file:
      - ./backend/.env
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - clickhouse_log:/var/log/clickhouse-server
    healthcheck:
      test: [ "CMD-SHELL", "clickhouse-client --query 'SELECT 1' || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 5

  click_migration:
    build: ./backend/common/storage/click_migrations
    env_file:
      - ./backend/.env
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./backend/common:/clickhouse/common

  data_processor:
    build: ./backend/data_processor
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./backend/common:/data_processor/common
    env_file:
      - ./backend/.env
    restart: unless-stopped

volumes:
  postgres-data:
  clickhouse_data:
  clickhouse_log:
